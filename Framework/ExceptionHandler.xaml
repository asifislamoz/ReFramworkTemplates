<Activity mc:Ignorable="sap sap2010" x:Class="ExceptionHandler" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:cf="clr-namespace:CustomActivities_Windows.Folders_and_Paths;assembly=CustomActivities_Windows" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:uix="http://schemas.uipath.com/workflow/activities/uix" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_exception" Type="InArgument(s:Exception)" />
    <x:Property Name="in_screenshotspath" Type="InArgument(x:String)" />
    <x:Property Name="in_queueItem" Type="InArgument(ui:QueueItem)" />
    <x:Property Name="in_DBConnection" Type="InArgument(ui:DatabaseConnection)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>954,1454</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ExceptionHandler_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="62">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Activities</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>CustomActivities.Folders_and_Paths</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>CustomActivities_Windows.Folders_and_Paths</x:String>
      <x:String>UiPath.Database</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="76">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices.RuntimeInformation</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Database.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>CustomActivities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>CustomActivities_Windows</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>UiPath.Database</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="ExceptionHandler" sap:VirtualizedContainerService.HintSize="526,1389" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="ExceptionText" />
      <Variable x:TypeArguments="x:String" Name="screenshot" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <cf:Create_Folder_when_missing out_FolderExists="{x:Null}" DisplayName="Create Folder when missing" sap:VirtualizedContainerService.HintSize="484,22" sap2010:WorkflowViewState.IdRef="Create_Folder_when_missing_1" in_pathToCheckOrCreate="[in_screenshotspath]" />
    <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_2">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[screenshot]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[Path.Combine({in_screenshotspath, String.Format("AuditReport_QueryAndScreenshot_Exception-{0}.png", DateTime.Now.ToString("yyyyMMdd-HHmmss"))})]</InArgument>
      </Assign.Value>
    </Assign>
    <uix:NTakeScreenshot DisplayName="Take Screenshot" FileName="[screenshot]" FileNameMode="None" sap:VirtualizedContainerService.HintSize="484,230" sap2010:WorkflowViewState.IdRef="NTakeScreenshot_1" Version="V1" />
    <ui:AddLogFields DisplayName="Add Log Fields" sap:VirtualizedContainerService.HintSize="484,22" sap2010:WorkflowViewState.IdRef="AddLogFields_1">
      <ui:AddLogFields.Fields>
        <InArgument x:TypeArguments="x:String" x:Key="errorScreenshot">[Path.GetFileName(in_screenshotspath)]</InArgument>
      </ui:AddLogFields.Fields>
    </ui:AddLogFields>
    <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[ExceptionText]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[String.Format("{0}: {1} : SCREENSHOT: {2}", in_exception.Source, in_exception.ToString,screenshot)]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="484,91" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Error" Message="[&quot;Exception Handler received exception: &quot;+ExceptionText]" />
    <ui:RemoveLogFields DisplayName="Remove Log Fields" sap:VirtualizedContainerService.HintSize="484,22" sap2010:WorkflowViewState.IdRef="RemoveLogFields_1">
      <ui:RemoveLogFields.Fields>
        <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
          <InArgument x:TypeArguments="x:String">errorScreenshot</InArgument>
        </scg:List>
      </ui:RemoveLogFields.Fields>
    </ui:RemoveLogFields>
    <If Condition="[in_queueItem isnot Nothing]" sap:VirtualizedContainerService.HintSize="484,510" sap2010:WorkflowViewState.IdRef="If_1">
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="421,323" sap2010:WorkflowViewState.IdRef="Sequence_2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Save to History" sap:VirtualizedContainerService.HintSize="379,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Support Workflows\SaveRequestActivityHistory.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:Int32" x:Key="in_request_activity_id">
                <VisualBasicValue x:TypeArguments="x:Int32" ExpressionText="Integer.Parse(in_queueItem.SpecificContent(&quot;request_activity_id&quot;).ToString)" />
              </InArgument>
              <InArgument x:TypeArguments="x:Int32" x:Key="in_activity_status">
                <Literal x:TypeArguments="x:Int32" Value="2" />
              </InArgument>
              <InArgument x:TypeArguments="x:Int32" x:Key="in_execution_time">
                <Literal x:TypeArguments="x:Int32" Value="2" />
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_associated_queue_item">
                <VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_queueItem.Id.ToString" />
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_log_message">
                <VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_exception.Message" />
              </InArgument>
              <InArgument x:TypeArguments="ui:DatabaseConnection" x:Key="in_DBConnection">
                <VisualBasicValue x:TypeArguments="ui:DatabaseConnection" ExpressionText="in_DBConnection" />
              </InArgument>
            </ui:InvokeWorkflowFile.Arguments>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:InvokeWorkflowFile>
          <ui:SetTransactionStatus ContinueOnError="{x:Null}" ServiceBaseAddress="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Set Transaction Status - Failure" ErrorType="Business" sap:VirtualizedContainerService.HintSize="379,79" sap2010:WorkflowViewState.IdRef="SetTransactionStatus_1" Reason="[in_exception.Message]" Status="Failed" TransactionItem="[in_queueItem]">
            <ui:SetTransactionStatus.Analytics>
              <scg:Dictionary x:TypeArguments="x:String, InArgument" />
            </ui:SetTransactionStatus.Analytics>
            <ui:SetTransactionStatus.Output>
              <scg:Dictionary x:TypeArguments="x:String, InArgument" />
            </ui:SetTransactionStatus.Output>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:SetTransactionStatus>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_3">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </Sequence>
      </If.Else>
    </If>
  </Sequence>
</Activity>